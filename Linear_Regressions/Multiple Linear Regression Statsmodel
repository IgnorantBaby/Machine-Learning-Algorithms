#Python code

import numpy as np
import pandas as pd
import statsmodels.api as sm
import matplotlib.pyplot as plt
import seaborn as sns
sns.set()

# Reading CSV Data file
raw_data = pd.read_csv('C:/Users/YAQABIZO/Desktop/ML notes/1.03. Dummies.csv')

# Mapping 0 & 1 to dummy variable
data = raw_data.copy()
data['Attendance'] = data['Attendance'].map({'Yes':1,'No':0})

# Defining Independent and Dependent Variables
y = data['GPA']
x1 = data[['SAT','Attendance']]

# Regression itself with detailed summary
x = sm.add_constant(x1)
results = sm.OLS(y,x).fit()
results.summary()

# Explore Results
plt.scatter(data['SAT'], y, c= data['Attendance'], cmap='RdYlGn_r')
yhat_no = 0.6439 + 0.0014*data['SAT']
yhat_yes = 0.8665 + 0.0014*data['SAT']
yhat = 0.2750 + 0.0017*data['SAT']
fig = plt.plot(data['SAT'], yhat_no, lw=2, c='blue')
fig = plt.plot(data['SAT'], yhat_yes, lw=2, c='red')
fig = plt.plot(data['SAT'], yhat, lw=2, c='brown')
plt.xlabel('SAT', fontsize=20)
plt.ylabel('GPA', fontsize=20)
plt.show()

# Predict Results
new_data = pd.DataFrame({'const':1, 'SAT':[1700,1670], 'Attendance':[0,1]})
predictions = results.predict(new_data)
predictionsF= pd.DataFrame({'Predictions':predictions})
final_data = new_data.join(predictionsF)
final_data = final_data.rename(index={0:'Bob', 1:'Alice'})
