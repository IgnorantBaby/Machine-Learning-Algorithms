#Python code



import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

train = pd.read_csv('C:/Users/YAQABIZO/Desktop/ML notes/ANN/cancer_classification.csv')

# Data Preprocessing
# Data Analysis

# Splitting data train test
X = train.drop('benign_0__mal_1', axis=1).values
y = train['benign_0__mal_1'].values
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=101)

# Standardizing Inputs
from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler()
scaled_X_train = scaler.fit_transform(X_train)
scaled_X_test = scaler.transform(X_test)
scaled_X_train.max()
scaled_X_train.min()

# Building ANN model without Dropout and EarlyStopping
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout
model = Sequential()
model.add(Dense(30,activation='relu'))
model.add(Dense(15,activation='relu'))

model.add(Dense(1,activation='sigmoid'))
model.compile(optimizer='Adam', loss='binary_crossentropy')

model.fit(x=scaled_X_train, y=y_train, validation_data=(scaled_X_test,y_test),
          batch_size=128, epochs=400)

loss_df = pd.DataFrame(model.history.history)
loss_df.plot()

# Building ANN model without Dropout
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout
from tensorflow.keras.callbacks import EarlyStopping
model = Sequential()
model.add(Dense(30,activation='relu'))
model.add(Dense(15,activation='relu'))

model.add(Dense(1,activation='sigmoid'))
model.compile(optimizer='Adam', loss='binary_crossentropy')

early_stop = EarlyStopping(monitor='val_loss', mode='min', verbose=1, patience=25)
model.fit(x=scaled_X_train, y=y_train, validation_data=(scaled_X_test,y_test),
          batch_size=128, epochs=400, callbacks=[early_stop])

loss_df = pd.DataFrame(model.history.history)
loss_df.plot()

# Building ANN model WITH Dropout and EarlyStopping
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout
from tensorflow.keras.callbacks import EarlyStopping
model = Sequential()
model.add(Dense(30,activation='relu'))
model.add(Dropout(0.5)) #good value between 0.2-0.5
model.add(Dense(15,activation='relu'))
model.add(Dropout(0.5)) #good value between 0.2-0.5

model.add(Dense(1,activation='sigmoid'))
model.compile(optimizer='Adam', loss='binary_crossentropy')

early_stop = EarlyStopping(monitor='val_loss', mode='min', verbose=1, patience=25)
model.fit(x=scaled_X_train, y=y_train, validation_data=(scaled_X_test,y_test),
          batch_size=128, epochs=400, callbacks=[early_stop])

loss_df = pd.DataFrame(model.history.history)
loss_df.plot()

# Predicting the model
predictions = model.predict_classes(scaled_X_test)

# Classification report
from sklearn.metrics import classification_report, confusion_matrix
print(classification_report(y_test, predictions)) 
print(confusion_matrix(y_test, predictions))



